{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\src\\views\\departments\\componet\\add-depart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\src\\views\\departments\\componet\\add-depart.vue","mtime":1665039869842},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\babel.config.js","mtime":1663904824000},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661582974512},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1661052815255},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661582974512},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1663904991653}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;EACAA,gBADA;EAEAC;IACAC;MACAC,aADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;QAAA;MAAA;IAFA;EALA,CAFA;EAYAE,IAZA,kBAYA;IAAA;;IACA;IACA;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,gBADA;;cAAA;gBAAA;gBACAC,KADA,yBACAA,KADA;gBAEAC,UAFA,GAEA,IAFA;gBAGAC;;gBACA;kBACAD;oBAAA;kBAAA;gBACA,CAFA,MAEA;kBACAA;oBAAA;kBAAA;gBACA;;gBACAA;;cATA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA,IAFA,CAaA;IACA;;;IACA;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAF,gBADA;;cAAA;gBAAA;gBACAC,KADA,0BACAA,KADA;gBAEA;gBACA;gBACAG,UAJA,GAIA,IAJA;;gBAKA;kBACAC,SADA,GACAJ;oBAAA;kBAAA,EADA;kBAEAE;kBACAC;oBAAA;kBAAA;gBACA,CAJA,MAIA;kBACAE,QADA,GACAL;oBAAA;kBAAA,EADA,EAEA;;kBACAG;oBAAA;kBAAA;gBACA;;gBACAA;;cAdA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA;;IAgBA;MACAG;QACAd,QADA;QACA;QACAe,QAFA;QAEA;QACAC,WAHA;QAGA;QACAC,aAJA,CAIA;;MAJA,CADA;MAOAC,eAPA;MAQAC;QACAnB,OACA;UAAAoB;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAF;QAAA,CAFA,EAGA;UAAAG;UAAAH;QAAA,CAHA,CADA;QAOAP,OACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAF;QAAA,CAFA,EAGA;UAAAG;UAAAH;QAAA,CAHA,CAPA;QAWAN,UACA;UAAAI;UAAAC;QAAA,CADA,CAXA;QAcAJ,YACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAF;QAAA,CAFA;MAdA;IARA;EA4BA,CAvEA;EAwEAI;IACAC,KADA,mBACA;MACA;IACA;EAHA,CAxEA;EA6EA;EACA;EACA;EACA;EACAC;IACAC,QADA,sBACA;MACA;MACA;MACA;MACA;QACA7B,QADA;QACA;QACAe,QAFA;QAEA;QACAC,WAHA;QAGA;QACAC,aAJA,CAIA;;MAJA;IAMA,CAXA;IAYAa,iBAZA,+BAYA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAA,oBADA;;cAAA;gBACAxB,IADA;gBAEAI;gBACA;;cAHA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CAhBA;IAiBAqB,MAjBA,oBAiBA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEA,+BAFA;;cAAA;gBAGA;kBAAAC;gBAAA;;gBACA,8DAJA,CAKA;;;gBACA;;gBACA;;gBAPA;gBAAA;;cAAA;gBAAA;gBAAA;;gBASA;;cATA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAWA;EA5BA;AAjFA","names":["name","props","showDialog","type","default","treeNode","data","getDepartments","depts","isRerequst","console","Rerequstis","Rerequst1","Rerequst","formData","code","manager","introduce","managerList","rules","required","message","trigger","min","max","validator","computed","title","methods","Addclose","getEmployeeSimple","submit","pid"],"sourceRoot":"src/views/departments/componet","sources":["add-depart.vue"],"sourcesContent":["<template>\r\n  <!-- 新增部门的弹层 -->\r\n  <el-dialog :title=\"title\" :visible=\"showDialog\" @close=\"Addclose\">\r\n    <!-- 表单组件  el-form   label-width设置label的宽度   -->\r\n    <!-- 匿名插槽 -->\r\n    <el-form ref=\"formAdd\" label-width=\"120px\" :model=\"formData\" :rules=\"rules\">\r\n      <el-form-item label=\"部门名称\" prop=\"name\">\r\n        <el-input v-model=\"formData.name\" style=\"width:80%\" placeholder=\"1-50个字符\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"部门编码\" prop=\"code\">\r\n        <el-input v-model=\"formData.code\" style=\"width:80%\" placeholder=\"1-50个字符\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"部门负责人\" prop=\"manager\">\r\n        <el-select v-model=\"formData.manager\" style=\"width:80%\" placeholder=\"请选择\" @focus=\"getEmployeeSimple\">\r\n          <el-option v-for=\"item in managerList\" :key=\"item.id\" :label=\"item.username\" :value=\"item.username\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"部门介绍\" prop=\"introduce\">\r\n        <el-input v-model=\"formData.introduce\" style=\"width:80%\" placeholder=\"1-300个字符\" type=\"textarea\" :rows=\"3\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <!-- el-dialog有专门放置底部操作栏的 插槽  具名插槽 -->\r\n    <el-row slot=\"footer\" type=\"flex\" justify=\"center\">\r\n      <!-- 列被分为24 -->\r\n      <el-col :span=\"6\">\r\n        <el-button type=\"primary\" size=\"small\" @click=\"submit\">确定</el-button>\r\n        <el-button size=\"small\">取消</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { getDepartments } from '@/api/departmennts'\r\nimport { getEmployeeSimple, addDepartments, updateDepartments } from '@/api/employees'\r\nexport default {\r\n  name: 'Addepart',\r\n  props: {\r\n    showDialog: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    treeNode: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    // 部门编码检测\r\n    const checkCode = async(rule, value, callback) => {\r\n      const { depts } = await getDepartments()\r\n      let isRerequst = true\r\n      console.log(depts)\r\n      if (this.formData.id) {\r\n        isRerequst = depts.some(ele => this.formData.id !== ele.id && ele.code === value)\r\n      } else {\r\n        isRerequst = depts.some(ele => ele.code === value)\r\n      }\r\n      isRerequst ? callback(new Error(`${value}已存在`)) : callback()\r\n    }\r\n    // 获取同级部门\r\n    // 部门名称检测\r\n    const checkName = async(rule, value, callback) => {\r\n      const { depts } = await getDepartments()\r\n      // console.log(depts)\r\n      // 编辑模式下\r\n      let Rerequstis = true\r\n      if (this.formData.id) {\r\n        const Rerequst1 = depts.filter(item => item.pid === this.treeNode.pid && item.id !== this.treeNode.id)\r\n        console.log(Rerequst1)\r\n        Rerequstis = Rerequst1.some(ele => ele.name === value)\r\n      } else {\r\n        const Rerequst = depts.filter(item => item.pid === this.treeNode.id)\r\n        //   console.log('Rerequst', Rerequst)\r\n        Rerequstis = Rerequst.some(ele => ele.name === value)\r\n      }\r\n      Rerequstis ? callback(new Error(`${value}已存在`)) : callback()\r\n    }\r\n    return {\r\n      formData: {\r\n        name: '', // 部门名称\r\n        code: '', // 部门编码\r\n        manager: '', // 部门管理者\r\n        introduce: '' // 部门介绍\r\n      },\r\n      managerList: [],\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '必填 1-50个字符', trigger: 'blur' },\r\n          { min: 1, max: 50, trigger: 'blur' },\r\n          {\tvalidator: checkName, trigger: 'blur' }\r\n\r\n        ],\r\n        code: [\r\n          { required: true, message: '必填 1-50个字符', trigger: 'blur' },\r\n          { min: 1, max: 50, trigger: 'blur' },\r\n          {\tvalidator: checkCode, trigger: 'blur' }\r\n        ], manager: [\r\n          { required: true, message: '必填' }\r\n\r\n        ], introduce: [\r\n          { required: true, message: '必填 1-300个字符', trigger: 'blur' },\r\n          { min: 1, max: 300, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      return this.formData.id ? '编辑模式' : '新增模式'\r\n    }\r\n  },\r\n  //     部门名称（name）：必填 1-50个字符 / 同级部门中禁止出现重复部门\r\n  // 部门编码（code）：必填 1-50个字符 / 部门编码在整个模块中都不允许重复\r\n  // 部门负责人（manager）：必填\r\n  // 部门介绍 ( introduce)：必填 1-300个字符\r\n  methods: {\r\n    Addclose() {\r\n    //   console.log()\r\n      this.$emit('update:showDialog', false)\r\n      this.$refs.formAdd.resetFields()\r\n      this.formData = {\r\n        name: '', // 部门名称\r\n        code: '', // 部门编码\r\n        manager: '', // 部门管理者\r\n        introduce: '' // 部门介绍\r\n      }\r\n    },\r\n    async getEmployeeSimple() {\r\n      const data = await getEmployeeSimple()\r\n      console.log(data)\r\n      this.managerList = data\r\n    },\r\n    async submit() {\r\n      try {\r\n        await this.$refs.formAdd.validate()\r\n        this.formData.id ? updateDepartments({ ...this.formData }) : addDepartments({ ...this.formData, pid: this.treeNode.id })\r\n        this.$message.success(this.formData.id ? '编辑成功' : '添加成功')\r\n        // this.$parent.getDepartments()\r\n        this.$emit('submit')\r\n        this.Addclose()\r\n      } catch (error) {\r\n        this.$message.error(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}