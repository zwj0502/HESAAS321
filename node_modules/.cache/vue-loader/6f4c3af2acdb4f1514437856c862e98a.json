{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\src\\views\\dashboard\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\src\\views\\dashboard\\index.vue","mtime":1665387707337},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661678001124},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1663928692628},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661678001124},{"path":"C:\\Users\\Administrator\\Desktop\\hrsaas(1)\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1664288167520}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcNCmltcG9ydCBVcGxvYWRFeGNlbCBmcm9tICdAL2NvbXBvbmVudHMvVXBsb2FkRXhjZWwvaW5kZXgudnVlJw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnRGFzaGJvYXJkJywNCiAgY29tcG9uZW50czogew0KICAgIFVwbG9hZEV4Y2VsDQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwR2V0dGVycyhbDQogICAgICAnbmFtZScNCiAgICBdKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaGFuZGxlU3VjY2VzcyhkYXRhKSB7DQogICAgICBjb25zb2xlLmxvZygnZGF0YScsIGRhdGEpDQogICAgfSwNCiAgICBiZWZvcmVVcGxvYWRkKGZpbGUpIHsNCiAgICAgIGNvbnNvbGUubG9nKGZpbGUpDQogICAgICBpZiAoZmlsZS5zaXplID4gMTAyNCkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCd0byBCaWcnKQ0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCiAgICAgIHJldHVybiB0cnVlDQogICAgfQ0KICB9DQogIC8vIGNyZWF0ZWQoKSB7DQogIC8vIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1c2VyL2dldFVzZXJJbmZvJykNCiAgLy8gfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"dashboard-text\">name: {{ name }}</div>\r\n    <svg-icon icon-class=\"eye-open\" />\r\n    <UploadExcel :before-uploadd=\"beforeUploadd\" :on-success=\"handleSuccess\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport UploadExcel from '@/components/UploadExcel/index.vue'\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    UploadExcel\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'name'\r\n    ])\r\n  },\r\n  methods: {\r\n    handleSuccess(data) {\r\n      console.log('data', data)\r\n    },\r\n    beforeUploadd(file) {\r\n      console.log(file)\r\n      if (file.size > 1024) {\r\n        this.$message.error('to Big')\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n  }\r\n  // created() {\r\n  // this.$store.dispatch('user/getUserInfo')\r\n  // }\r\n}\r\n</script>\r\n\r\n  <style lang=\"scss\" scoped>\r\n  .dashboard {\r\n   &-container {\r\n   margin: 30px;\r\n   }\r\n   &-text {\r\n    font-size: 30px;\r\n    line-height: 46px;\r\n   }\r\n  }\r\n  </style>\r\n\r\n"]}]}